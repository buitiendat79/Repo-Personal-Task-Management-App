name: CI/CD with Docker + Vercel

on:
  push:
    branches:
      - main

jobs:
  # --- Unit Test (Vitest) ---
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run unit tests (Vitest)
        run: yarn test --run

  # --- E2E Test (Playwright) ---
  e2e-test:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests (Playwright)
        run: yarn playwright test

  # --- CI: Build bằng Docker ---
  build:
    runs-on: ubuntu-latest
    needs: e2e-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image (CI test only)
        run: docker build -t task-app:ci .

  # --- CD: Deploy lên Vercel ---
  deploy:
    runs-on: ubuntu-latest
    needs: build # chỉ chạy khi job build thành công

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Info
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project with Vercel
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
